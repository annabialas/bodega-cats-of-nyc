<div class="map">
	<div class="map__wrapper">
		<div id="js-map"></div>
	</div>
</div>

<script>

	// Set up map
	mapboxgl.accessToken = 'pk.eyJ1IjoiYW5uYWJpYWxhcyIsImEiOiJjaWh3bzVybjUwMm92dGZraHFwcnY4bG16In0.j2Sl8c2UoLY_yHBjO1vAfQ';
		var map = new mapboxgl.Map({
		    container: 'js-map',
		    style: 'mapbox://styles/mapbox/light-v9',
		    center: [-73.95996093749999, 40.724884598773755],
		    zoom: 11
		});

	// Add Geocoder to map
	var geocoder = new mapboxgl.Geocoder();
	map.addControl(geocoder);
	// Add more controls (navigation, geolocation):
	map.addControl(new mapboxgl.NavigationControl());
	map.addControl(new mapboxgl.GeolocateControl({position: 'bottom-left'}));
	// Disable zoom on scroll
	map.scrollZoom.disable();

	map.on('load', function () {
		// Fetch bodega data
		map.addSource("bodegas", {
			"type": "geojson",
			"data": "./api"
		});
		// Add bodegas to map
		map.addLayer({
		    "id": "bodegas",
		    "type": "circle",
		    "source": "bodegas",
		    "paint": {
	            "circle-radius": 6,
	            // Set circle's color according to its location
	            "circle-color": {
    				property: 'city',
    				type: 'categorical',
				    stops: [
				        ['New York', '#E91E63'],
				        ['Brooklyn', '#2e294e'],
				        ['Queens', '#A4EAA4'],
				        ['Bronx', '#FFF000'],
				        ['Staten Island', '#63448d']
				    ]
				},
	            "circle-opacity": 0.7
	        }
		});
		// GeoJSON schema for Geocoder query
		map.addSource('single-point', {
	        "type": "geojson",
	        "data": {
	            "type": "FeatureCollection",
	            "features": []
	        }
    	});
		// Set point after Geocoder result 
		map.addLayer({
	        "id": "point",
	        "source": "single-point",
	        "type": "symbol",
	        "layout": {
		        "icon-image": "veterinary-15"
		    }
    	});
		// Display marker for Geocoder result
    	geocoder.on('result', function(ev) {
        	map.getSource('single-point').setData(ev.result.geometry);
    	});
	});

	// Popups via https://www.mapbox.com/mapbox-gl-js/example/popup-on-click/

	map.on('click', function (e) {
    	var features = map.queryRenderedFeatures(e.point, { layers: ['bodegas'] });

	    if (!features.length) {
	        return;
	    }

    	var feature = features[0];

	    // Populate the popup and set its coordinates
	    // based on the feature found.
	    var popup = new mapboxgl.Popup({closeOnClick: true})
	        .setLngLat(feature.geometry.coordinates)
	        .setHTML('<div class="popup"><p class="popup__title">' + feature.properties.bodega + '</p><p class="popup__text">' + feature.properties.address + '</p><p class="popup__text">' + feature.properties.city + ', NY ' + feature.properties.zip + '</p></div>')
	        .addTo(map);
	});

	// Use the same approach as above to indicate that the symbols are clickable
	// by changing the cursor style to 'pointer'.
	map.on('mousemove', function (e) {
	    var features = map.queryRenderedFeatures(e.point, { layers: ['bodegas'] });
	    map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';
	});


	// Geolocation via https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/Using_geolocation#Prompting_for_permission : -- WORKS ONLY WITH HTTPS THEREFORE NOT ON AWS

	// document.addEventListener("DOMContentLoaded", function locateMe() { 

	// 	if (!navigator.geolocation) {
 //    		console.log("Geolocation not supported by browser");
 //    		return;
 //  		};

	// 	function success(position) {

	// 		var lon = position.coords.longitude;
	// 		var lat = position.coords.latitude;

	// 		map.flyTo({ 
	// 			center: [lon, lat],
	// 			zoom: 15
	// 		});


	// 	};

	// 	function error() {
 //    		console.log("Geolocation disabled");
 //  		};	

	// 	navigator.geolocation.getCurrentPosition(success, error);
	// });

</script>